name: CI
on:
  push:
    branches: [main]
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  cabal:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - uses: haskell/actions/setup@v2.0
        name: Setup Haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Configure
        run: cabal configure --enable-tests --test-show-details=direct --write-ghc-environment-files=always

      - name: Freeze
        run: cabal freeze

      - name: Install dependencies
        run: cabal build all --only-dependencies

      - name: Build
        run: cabal build all

      - name: Test
        run: cabal test all

  hlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run HLint
        env:
          HLINT_VERSION: "3.2.7"
        run: |
          curl -L https://github.com/ndmitchell/hlint/releases/download/v${HLINT_VERSION}/hlint-${HLINT_VERSION}-x86_64-linux.tar.gz --output hlint.tar.gz
          tar -xvf hlint.tar.gz
          ./hlint-${HLINT_VERSION}/hlint app/ src/ test/

  stan:
    name: stan
    runs-on: ubuntu-latest
    env:
      CABAL_VERSION: "3.6"
      # `stan` Github Release supports this version as of now. If we want to run stan on multiple
      # GHC versions, we need to build `stan` from source.
      GHC_VERSION: "8.10.1"
      STAN_VERSION: "0.0.1.0"

    steps:
      - uses: actions/checkout@v3

      - uses: haskell/actions/setup@v2.0
        name: Setup Haskell
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          cabal-version: ${{ env.CABAL_VERSION }}

      - name: Configure
        run: |
          cabal configure --enable-tests --enable-benchmarks --enable-documentation --test-show-details=direct --write-ghc-environment-files=always

      - name: Freeze
        run: cabal freeze

      - name: Install dependencies
        run: cabal build all --only-dependencies

      - name: Build
        run: |
          cabal build all

      - name: Download `stan`
        run: |
          curl --silent -L https://github.com/kowainik/stan/releases/latest/download/stan-$STAN_VERSION-Linux-ghc-$GHC_VERSION --output stan
          chmod +x stan

      - name: Run `stan`
        run: ./stan report

      - name: Upload stan HTML report artifact
        uses: actions/upload-artifact@v3
        with:
          name: stan-report
          path: stan.html
